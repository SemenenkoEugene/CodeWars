package org.example.kyu_6;

/*
В этом Ката вы будете реализовывать алгоритм Луна, который используется для проверки номеров кредитных карт.
Если задано положительное целое число длиной до 16 цифр, верните значение, true если это действительный номер кредитной карты,
 и false если это не так.

Вот алгоритм:
Удваивайте каждую вторую цифру, сканируя справа налево, начиная со второй цифры (справа).
Еще один способ подумать об этом: если есть четное количество цифр, удвойте каждую вторую цифру, начиная с первой;
если есть нечетное количество цифр, удвойте каждую вторую цифру, начиная со второй:
1714 ==> [1*, 7, 1*, 4] ==> [2, 7, 2, 4]
12345 ==> [1, 2*, 3, 4*, 5] ==> [1, 4, 3, 8, 5]
891 ==> [8, 9*, 1] ==> [8, 18, 1]
Если полученное число больше 9, замените его суммой собственных цифр (что равносильно вычитанию 9 из него):
[8, 18*, 1] ==> [8, (1+8), 1] ==> [8, 9, 1]
or:
[8, 18*, 1] ==> [8, (18-9), 1] ==> [8, 9, 1]
Суммируйте все окончательные цифры:
[8, 9, 1] ==> 8 + 9 + 1 = 18
Наконец, возьмите эту сумму и разделите ее на 10. Если остаток равен нулю, исходный номер кредитной карты действителен.
18 (modulus) 10 ==> 8, which is not equal to 0, so this is not
 */
public class Validate {
    public static void main(String[] args) {
        String n = "2202206747778392";
        System.out.println(validate(n));
    }

    public static boolean validate(String n) {
        int length = n.length();
        int sum = 0;
        boolean isSecond = false;

        for (int i = length - 1; i >= 0; i--) {
            int digit = n.charAt(i) - '0';

            if (isSecond) {
                digit *= 2;
                if (digit > 9) {
                    digit = digit - 9;
                }
            }
            sum += digit;
            isSecond = !isSecond;
        }
        return sum % 10 == 0;
    }
}
