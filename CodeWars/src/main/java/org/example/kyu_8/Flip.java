package org.example.kyu_8;

import java.util.Arrays;
import java.util.Collections;

/*
Если вы уже выполнили это ката и хотите более сложной задачи, вот 3D версия

Бобу скучно на уроках физики, поэтому он смастерил себе коробку с игрушками, чтобы скоротать время.
Коробка особенная, потому что в ней есть способность изменять силу тяжести.

В коробке несколько столбцов игрушечных кубиков, расположенных в ряд. i-й столбец содержит a_i кубики.
Сначала сила тяжести в коробке тянет кубики вниз. Когда Боб переключает гравитацию, он начинает тянуть все кубики
к определенной стороне ящика, d которая может быть либо'L', либо 'R' (влево или вправо). Ниже приведен пример того,
как может выглядеть коробка с кубиками до и после переключения силы тяжести.

+---+                                       +---+
|   |                                       |   |
+---+                                       +---+
+---++---+     +---+              +---++---++---+
|   ||   |     |   |   -->        |   ||   ||   |
+---++---+     +---+              +---++---++---+
+---++---++---++---+         +---++---++---++---+
|   ||   ||   ||   |         |   ||   ||   ||   |
+---++---++---++---+         +---++---++---++---+
Учитывая начальную конфигурацию кубиков в поле, выясните, сколько кубиков находится в каждом из n столбцов после того, как Боб переключит гравитацию.

Примеры (ввод -> вывод:
* 'R', [3, 2, 1, 2]      ->  [1, 2, 2, 3]
* 'L', [1, 4, 5, 3, 5 ]  ->  [5, 5, 4, 3, 1]
 */
public class Flip {
    public static void main(String[] args) {
        System.out.println(Arrays.toString(flip('L', new int[]{3, 2, 1, 2})));
    }

    public static int[] flip(char dir, int[] arr) {
        if (dir == 'R') {
            return Arrays.stream(arr)
                    .sorted()
                    .toArray();
        } else if (dir == 'L') {
            return Arrays.stream(arr)
                    .boxed()
                    .sorted(Collections.reverseOrder())
                    .mapToInt(Integer::intValue)
                    .toArray();
        }
        return arr;
    }
}
